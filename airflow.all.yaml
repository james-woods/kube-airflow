#apiVersion: v1
#kind: Service
#metadata:
#  name: postgres
#spec:
#  type: ClusterIP
#  selector:
#    app: airflow
#    tier: db
#  ports:
#    - name: postgres
#      protocol: TCP
#      port: 5432
#      targetPort: postgres
#---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
spec:
  selector:
    app: airflow
    tier: rabbitmq
  ports:
    - name: node
      protocol: TCP
      port: 5672
      targetPort: node
    - name: management
      protocol: TCP
      port: 15672
      targetPort: management
---
apiVersion: v1
kind: Service
metadata:
  name: web
spec:
  selector:
    app: airflow
    tier: web
  ports:
    - name: web
      protocol: TCP
      port: 8080
      targetPort: web
      #nodePort: 32080
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: flower
#spec:
#  type: ClusterIP
#  selector:
#    app: airflow
#    tier: flower
#  ports:
#    - name: flower
#      protocol: TCP
#      port: 5555
#      targetPort: flower
#      #nodePort: 32081
#---
#apiVersion: extensions/v1beta1
#kind: Deployment
#metadata:
#  name: postgres
#spec:
#  replicas: 1
#  template:
#    metadata:
#      labels:
#        app: airflow
#        tier: db
#    spec:
#      containers:
#      - name: postgres
#        image: postgres
#        ports:
#        - name: postgres
#          containerPort: 5432
#        env:
#         - name: POSTGRES_USER
#           value: "airflow"
#         - name: POSTGRES_PASSWORD
#           value: "airflow"
#         - name: POSTGRES_DB
#           value: "airflow"
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: rabbitmq
    spec:
      restartPolicy: Always
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management
        ports:
        - name: management
          containerPort: 15672
        - name: node
          containerPort: 5672
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: airflow
        - name: RABBITMQ_DEFAULT_PASS
          value: airflow
        - name: RABBITMQ_DEFAULT_VHOST
          value: airflow
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: web
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: web
    spec:
      restartPolicy: Always
      containers:
      - name: web
        image: gcr.io/plucky-aegis-94413/airflow:latest
        imagePullPolicy: Always
#        lifecycle:
#          postStart:
#            exec:
#              command:
#                - cp
#                - -R
#                - /gcloud-credentials
#                - /.config/gcloud
        volumeMounts:
        - name: plugins-volume
          mountPath: /usr/local/airflow/plugins
        - name: dags-volume
          mountPath: /usr/local/airflow/dags
        - name: config
          mountPath: /usr/local/airflow/airflow.cfg
          subPath: airflow.cfg
        - name: mmkpi-key
          mountPath: /usr/local/airflow/credentials
          readOnly: true
        - name: gcloud-mmkpi
          mountPath: /gcloud-credentials
          readOnly: True
        env:
        - name: AIRFLOW_HOME
          value: "/usr/local/airflow"
        ports:
        - name: web
          containerPort: 8080
        args: ["webserver"]
      # imagePullSecrets:
      #   - name: tobi-key
      # volumes:
      #   - name: plugins-volume
      #     configMap:
      #       name: airflow-plugins
      #   - name: dags-volume
      #     configMap:
      #       name: airflow-dags
      #   - name: config
      #     configMap:
      #       name: airflow-conf
      #   - name: mmkpi-key
      #     secret:
      #       secretName: gcloud-mmkpi-key
      #   - name: gcloud-mmkpi
      #     secret:
      #       secretName: gcloud-mmkpi
      #       items:
      #       - key: credentials
      #         path: credentials
      #       - key: active_config
      #         path: active_config
      #       - key: gce
      #         path: gce
      #       - key: config_default
      #         path: configurations/config_default
#---
#---
#apiVersion: extensions/v1beta1
#kind: Deployment
#metadata:
#  name: flower
#spec:
#  replicas: 1
#  template:
#    metadata:
#      labels:
#        app: airflow
#        tier: flower
#    spec:
#      restartPolicy: Always
#      containers:
#      - name: flower
#        image: registry.env.intra.local.ch/dataintel/airflow:1.7.2.dev0
#        imagePullPolicy: Always
#        volumeMounts:
#        - name: dags-volume
#          mountPath: /usr/local/airflow/dags
#        - name: config
#          mountPath: /usr/local/airflow/airflow.cfg
#          subPath: airflow.cfg
#        env:
#        - name: AIRFLOW_HOME
#          value: "/usr/local/airflow"
#        # To prevent the error: ValueError: invalid literal for int() with base 10: 'tcp://10.0.0.83:5555'
#        - name: FLOWER_PORT
#          value: "5555"
#        ports:
#        - name: flower
#          containerPort: 5555
#        args: ["flower"]
#      imagePullSecrets:
#        - name: tobi-key
#      volumes:
#        - name: dags-volume
#          configMap:
#            name: airflow-dags
#        - name: config
#          configMap:
#            name: airflow-conf
#---
#apiVersion: extensions/v1beta1
#kind: Deployment
#metadata:
#  name: scheduler
#spec:
#  replicas: 1
#  template:
#    metadata:
#      labels:
#        app: airflow
#        tier: scheduler
#    spec:
#      restartPolicy: Always
#      containers:
#      - name: scheduler
#        image: registry.env.intra.local.ch/dataintel/airflow:1.7.2.dev0
#        imagePullPolicy: Always
#        volumeMounts:
#        - name: dags-volume
#          mountPath: /usr/local/airflow/dags
#        - name: config
#          mountPath: /usr/local/airflow/airflow.cfg
#          subPath: airflow.cfg
#        # volumes:
#        #     - /localpath/to/dags:/usr/local/airflow/dags
#        env:
#        - name: AIRFLOW_HOME
#          value: "/usr/local/airflow"
#        args: ["scheduler", "-n", "5"]
#      imagePullSecrets:
#        - name: tobi-key
#      volumes:
#        - name: dags-volume
#          configMap:
#            name: airflow-dags
#        - name: config
#          configMap:
#            name: airflow-conf
#---
#apiVersion: extensions/v1beta1
#kind: Deployment
#metadata:
#  name: worker
#spec:
#  replicas: 1
#  template:
#    metadata:
#      labels:
#        app: airflow
#        tier: worker
#    spec:
#      restartPolicy: Always
#      containers:
#      - name: worker
#        image: registry.env.intra.local.ch/dataintel/airflow:1.7.2.dev0
#        imagePullPolicy: Always
#        volumeMounts:
#        - name: dags-volume
#          mountPath: /usr/local/airflow/dags
#        - name: config
#          mountPath: /usr/local/airflow/airflow.cfg
#          subPath: airflow.cfg
#        # volumes:
#        #     - /localpath/to/dags:/usr/local/airflow/dags
#        env:
#        - name: AIRFLOW_HOME
#          value: "/usr/local/airflow"
#        args: ["worker"]
#      imagePullSecrets:
#        - name: tobi-key
#      volumes:
#        - name: dags-volume
#          configMap:
#            name: airflow-dags
#        - name: config
#          configMap:
#            name: airflow-conf
